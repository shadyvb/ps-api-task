<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class VulnerabilityRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true; // No authentication required as per requirements
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array|string>
     */
    public function rules(): array
    {
        $rules = [
            'title' => ['required', 'string', 'max:255'],
            'description' => ['required', 'string'],
            'references' => ['nullable', 'array'],
            'references.*.title' => ['required', 'string', 'max:255'],
            'references.*.link' => ['required', 'url'],
            'cwes' => ['nullable', 'array'],
            'cwes.*.code' => ['required', 'string'],
            'cwes.*.name' => ['required', 'string'],
            'cwes.*.link' => ['required', 'url'],
        ];

        // Add the code validation rule with conditional unique check
        $rules['code'] = [
            'required',
            'string',
            'max:255',
            $this->isMethod('PUT') || $this->isMethod('PATCH')
                ? Rule::unique('vulnerabilities')->ignore($this->route('vulnerability'))
                : Rule::unique('vulnerabilities'),
        ];

        return $rules;
    }
}
